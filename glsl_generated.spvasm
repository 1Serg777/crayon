; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 11
; Bound: 55
; Schema: 0
               OpCapability Shader
               OpCapability Float64
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %col %vertUv
               OpExecutionMode %main OriginUpperLeft
               OpSource GLSL 460
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpName %main "main"
               OpName %positions "positions"
               OpName %matrix "matrix"
               OpName %vect "vect"
               OpName %col "col"
               OpName %vertUv "vertUv"
               OpDecorate %col Location 0
               OpDecorate %vertUv Location 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
       %uint = OpTypeInt 32 0
     %uint_3 = OpConstant %uint 3
%_arr_v2float_uint_3 = OpTypeArray %v2float %uint_3
%_ptr_Private__arr_v2float_uint_3 = OpTypePointer Private %_arr_v2float_uint_3
  %positions = OpVariable %_ptr_Private__arr_v2float_uint_3 Private
    %float_0 = OpConstant %float 0
 %float_n0_5 = OpConstant %float -0.5
         %15 = OpConstantComposite %v2float %float_0 %float_n0_5
  %float_0_5 = OpConstant %float 0.5
         %17 = OpConstantComposite %v2float %float_n0_5 %float_0_5
         %18 = OpConstantComposite %v2float %float_0_5 %float_0_5
         %19 = OpConstantComposite %_arr_v2float_uint_3 %15 %17 %18
     %double = OpTypeFloat 64
   %v2double = OpTypeVector %double 2
%mat2v2double = OpTypeMatrix %v2double 2
%_ptr_Function_mat2v2double = OpTypePointer Function %mat2v2double
   %double_1 = OpConstant %double 1
   %double_0 = OpConstant %double 0
         %27 = OpConstantComposite %v2double %double_1 %double_0
         %28 = OpConstantComposite %v2double %double_0 %double_1
         %29 = OpConstantComposite %mat2v2double %27 %28
    %v3float = OpTypeVector %float 3
%_ptr_Function_v3float = OpTypePointer Function %v3float
%mat2v2float = OpTypeMatrix %v2float 2
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
        %col = OpVariable %_ptr_Output_v4float Output
    %float_1 = OpConstant %float 1
%_ptr_Input_v2float = OpTypePointer Input %v2float
     %vertUv = OpVariable %_ptr_Input_v2float Input
       %main = OpFunction %void None %3
          %5 = OpLabel
     %matrix = OpVariable %_ptr_Function_mat2v2double Function
       %vect = OpVariable %_ptr_Function_v3float Function
               OpStore %positions %19
               OpStore %matrix %29
         %33 = OpLoad %mat2v2double %matrix
         %35 = OpCompositeExtract %v2double %33 0
         %36 = OpFConvert %v2float %35
         %37 = OpCompositeExtract %v2double %33 1
         %38 = OpFConvert %v2float %37
         %39 = OpCompositeConstruct %mat2v2float %36 %38
         %40 = OpCompositeExtract %float %39 0 0
         %41 = OpCompositeExtract %float %39 0 1
         %42 = OpCompositeExtract %float %39 1 0
         %43 = OpCompositeConstruct %v3float %40 %41 %42
               OpStore %vect %43
         %47 = OpLoad %v3float %vect
         %49 = OpCompositeExtract %float %47 0
         %50 = OpCompositeExtract %float %47 1
         %51 = OpCompositeExtract %float %47 2
         %52 = OpCompositeConstruct %v4float %49 %50 %51 %float_1
               OpStore %col %52
               OpReturn
               OpFunctionEnd
